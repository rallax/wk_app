package com.wk.app.rules

import com.wk.app.facts.*;
import com.wk.app.enums.*;
import java.math.BigDecimal;


declare Charge
	customer : Customer @key
	sms : Sms @key
	nppPerDay : int @key
	local : boolean @key
end

rule "Формируем расходы отправителя"
when
    $sms : Sms($sender : sender)
    $customer: Customer(number==$sender)
    not Charge(customer != $customer, sms==$sms)
then
    System.out.println( "Create Charge with customer: " + $customer + " sms: " + $sms );
    insertLogical(new Charge($customer, $sms, $sms.getNppPerDay(), $sms.isLocal()));
end


rule "Тариф SIMPLE"
when
    $customer: Customer(tariff==Tariff.SIMPLE)
    Charge($sms : sms, customer == $customer)
then
    System.out.println( "Price 2.0 for " + $customer.getNumber() );
    insertLogical(new SmsBillingRecord($customer, new BigDecimal(2.0), $sms));
end

rule "Тариф SMART первые 5 смс/день бесплатные"
when
    $customer: Customer(tariff==Tariff.SMART)
    Charge($sms : sms, customer == $customer, nppPerDay <= 5)

then
    System.out.println( "Price 0.0 for " + $customer.getNumber() );
    insertLogical(new SmsBillingRecord($customer, new BigDecimal(0.0), $sms));
end


rule "Тариф SMART локальный"
when
    $customer: Customer(tariff==Tariff.SMART)
    Charge($sms : sms, customer == $customer, nppPerDay > 5, local == true)
then
    System.out.println( "Price 1.5 for " + $customer.getNumber() );
    insertLogical(new SmsBillingRecord($customer, new BigDecimal(1.5), $sms));
end

rule "Тариф SMART на другие операторы"
when
    $customer: Customer(tariff==Tariff.SMART)
    Charge($sms : sms, customer == $customer, nppPerDay > 5, local == false)
then
    System.out.println( "Price 2.5 for " + $customer.getNumber() );
    insertLogical(new SmsBillingRecord($customer, new BigDecimal(2.5), $sms));
end

rule "Test"
when
    $customer: Customer(tariff==Tariff.SIMPLE)
    Charge($sms : sms, customer == $customer)
    accumulate($c : Charge(sms == $sms, customer == $customer);$count : count($c); $count <= 3)
then
    System.out.println( "Test " + $count);
end

